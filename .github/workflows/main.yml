name: CI/CD Pipeline update

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package --no-transfer-progress

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/pantrypro:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/pantrypro:latest

  Sonarcloud:
    runs-on: ubuntu-latest
    needs: build  # Ensure this runs after the build job

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=sjorsk77_api -Dsonar.host.url=https://sonarcloud.io

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure this runs after the build job
  
    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}  # Your server's IP
          username: ${{ secrets.SSH_USER }}  # Your server username
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Your SSH private key
          script: |

            echo "Connecting to server..."
            echo "Current date and time: $(date)"
            echo "Connected to: $(hostname)"
            
            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/pantrypro:latest
            
            # Stop and remove the old container if it exists
            docker stop pantrypro || true
            docker rm pantrypro || true
            
            # Run the new container
            docker run -d -p 8080:8080 --name pantrypro ${{ secrets.DOCKER_USERNAME }}/pantrypro:latest
