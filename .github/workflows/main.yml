name: CI/CD pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean package --no-transfer-progress

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/pantrypro:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/pantrypro:latest
      
  sonarcloud:
      needs: build
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
  
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '17'
  
        - name: Build with Maven
          run: mvn clean verify
  
        - name: Build and analyze with SonarCloud
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
            SONAR_ORG: ${{ secrets.SONAR_ORG }}
          run: |
            curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
            unzip sonar-scanner.zip -d sonar-scanner
            chmod +x sonar-scanner/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner
            sonar-scanner/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner -Dsonar.projectKey="${{ secrets.SONAR_PROJECT_KEY }}" \
            -Dsonar.organization="${{ secrets.SONAR_ORG }}" \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.login="${{ secrets.SONAR_TOKEN }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}               # Oracle Cloud Server IP
          username: ${{ secrets.SSH_USER }}           # SSH Username
          password: ${{ secrets.SSH_PASSWORD }}       # SSH Password or private ke
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/pantrypro:latest
            docker stop pantrypro || true
            docker run -d --name pantrypro -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/pantrypro:latest
